{
	// Place your Competitive_Coding workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"LeetCode problem template": {
		"prefix": "leet",
		"body": [
		  "from typing import List",
		  "",
		  "\"\"\"",
		  "Problem Name: ${1}",
		  "",
		  "Problem URL: ${2}",
		  "",
		  "Problem Section: ${3}",
		  "",
		  "Problem Difficulty: ${4}",
		  "",
		  "Problem Statement:",
		  "${5}",
		  "",
		  "Resources:",
		  "",
		  "\"\"\"",
		  "",
		  "class Solution:",
		  "    \"\"\"",
		  "    Solution technique:",
		  "",
		  "    Time & Space Complexity:",
		  "",
		  "    Runtime:",
		  "    \"\"\"",
		  "    ${6}def functionName(self, s: str) -> int:",
		  "        pass",
		  "",
		  "",
		  "# myobj = Solution()",
		  "# inpt = input",
		  "# print(myobj.function_name(inpt))",
		  "",
		  "\"\"\"",
		  "import file_name",
		  "def test_name():",
		  "    assert file_name.Solution().functionName(val) == OP",
		  "\"\"\""
		],
		"description": "LeetCode problem template"
	  }
}